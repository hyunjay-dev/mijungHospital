<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 완벽한 행태의 CRUD가 다 들어있는 sqlMapper 이게 돌아간다면 MyBatis Framework에단에 문제가 없는 
	것으로 본다 일종의 단위테스트...MyBatisAppTest.java 가 바로 MyBatis Mapper 단위테스트 -->

<mapper namespace="CustomerMapper">
 
    <insert id="register" parameterType="customer" >
   		INSERT INTO customer     
		(cust_id, cust_password, cust_name, cust_phone)
		VALUES(#{custId}, #{custPassword}, #{custName}, #{custPhone})
    </insert>
    <select id="login" parameterType="customer" resultType="customer">
		SELECT cust_id, cust_password, cust_name, cust_phone, cust_admin
		FROM customer
		WHERE cust_id=#{custId} AND cust_password=#{custPassword}
    </select>
    <delete id="dropCustomer" parameterType="string">
        DELETE FROM customer WHERE cust_id=#{VALUE}    
    </delete>
    <select id="idCheck" parameterType="string" resultType="int">
      	SELECT COUNT(cust_id) FROM customer WHERE cust_id=#{VALUE}  
    </select>
    <select id="findId" parameterType="customer" resultType="customer">
    	SELECT cust_id, cust_password, cust_name, cust_phone
    	FROM customer
    	WHERE cust_name=#{custName} AND cust_phone=#{custPhone}
    </select>
    <select id="findPassword" parameterType="customer" resultType="customer">
    	SELECT cust_id, cust_password, cust_name, cust_phone
    	FROM customer
    	WHERE cust_name=#{custName} AND cust_phone=#{custPhone} AND cust_id=#{custId}
    </select>
    <update id="changePassword" parameterType="customer">
    	UPDATE customer 
    	SET cust_password=#{custPassword}
    	WHERE cust_id=#{custId}
    </update>
</mapper>

















